generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model api_order {
  idOrder          BigInt             @id @default(autoincrement())
  quality          api_order_quality?
  amount           Int?
  price            Float?             @db.Float
  destiny          String?            @db.VarChar(255)
  type             api_order_type?
  idUser_id        BigInt?
  activeOrder      Boolean?           @default(true)
  api_user         api_user?          @relation(fields: [idUser_id], references: [idUser], onDelete: NoAction, onUpdate: NoAction, map: "api_order_ibfk_1")
  api_recolezction api_recolection[]

  @@index([idUser_id], map: "idx_api_order_idUser_id")
}

model api_recolection {
  idRecolection BigInt     @id @default(autoincrement())
  date          DateTime?  @db.DateTime(6)
  place         String?    @db.VarChar(255)
  owner         String?    @db.VarChar(255)
  amount        Float?     @db.Float
  idOrder_id    BigInt?
  api_order     api_order? @relation(fields: [idOrder_id], references: [idOrder], onDelete: NoAction, onUpdate: NoAction, map: "api_recolection_ibfk_1")

  @@index([idOrder_id], map: "idx_api_recolection_idOrder_id")
}

model api_task {
  idTask      BigInt   @id @default(autoincrement())
  title       String?  @db.VarChar(255)
  description String?  @db.LongText
  completed   Boolean?
}

model api_user {
  idUser       BigInt      @id @default(autoincrement())
  username     String?     @db.VarChar(100)
  email        String?     @db.VarChar(255)
  first_name   String?     @db.VarChar(255)
  second_name  String?     @db.VarChar(255)
  isBuyer      Boolean?
  isSeller     Boolean?
  organization String?     @db.VarChar(255)
  role         String?     @db.VarChar(255)
  lastSession  DateTime?   @db.DateTime(6)
  created_at   DateTime?   @db.DateTime(6)
  api_order    api_order[]
}

enum api_order_quality {
  super
  alta
  media
}

enum api_order_type {
  vegetal
  animal
  semi_industrial @map("semi-industrial")
  semi_procesado  @map("semi-procesado")
}
